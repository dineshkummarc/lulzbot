#!/usr/bin/env node

/*
This is a script that runs all the necessary processes for me.  Ideally, we'd
have some generalized mix of isaac's Supervisor and lrbabe's d.js, but for now
this ad-hoc solution will do. Assuming it works.
*/

var fs = require('fs');
var spawn = require('child_process').spawn;
var sys = require('sys');

//A generalized function that runs things and watches things
function run(runthis, watchthese) {
    var running = spawn('node', [runthis]);
    running.on('exit', function () {
        run(runthis, watchthese);
    });
    if (watchthese) {
        watchthese.concat([runthis])
                  .forEach(function (file) {
            fs.watchFile(file, function () {
                sys.puts(runthis+': '+file+' updated! Going to restart...');
                //kills the services so that exit event can restart it. Hopefully.
                running.kill();
                //cleanup
                watchthese.forEach(fs.unwatchFile);
            });
        });
    }
    running.stdout.on('data', function(data) {
        sys.puts(runthis+': '+ data.toString("utf-8"));
    });
    running.stderr.on('data', function(data) {
        sys.puts(runthis+' ERROR: '+ data.toString("utf-8"));
    });
}

//Run everything
var synchronize = run('synchronize.js');
var relay = run('relay.js');
var services = run('services.js', ['branch.js', 'gitwatch.js', 'lns.js', 'onscreen.js', ]);
